本地LBLG =实例。新建(“屏幕GUI”)
本地LBL = Instance.new("文本标签")
本地玩家=游戏。玩家。本地玩家

-修复：确保几内亚正确放置
LBLG .Name = "LBLG "
LBLG .parent = game:GetService(" CoreGui ")--使用获取服务更安全
LBLG。ZIndexBehavior = Enum。ZIndexBehavior .同胞
LBLG。启用=真

LBL。Name = "LBL "
LBL。Parent = LBLG
LBL。BackgroundColor3 = Color3.new(1，1，1)
LBL。BackgroundTransparency = 1
LBL。BorderColor3 = Color3.new(0，0，0)
LBL。Position = UDim2.new(0.75，0，0.010，0)
LBL。Size = UDim2.new(0，200，0，30)
LBL。Font = Enum。字体. GothamSemibold
LBL。Text = "加载中..."
LBL。TextColor3 = Color3.new(1，1，1)
LBL。TextScaled = false
LBL。TextSize = 16
LBL。TextWrapped = true
LBL。可见=真

本地FpsLabel = LBL
本地心跳= game:get service(“run service”)。心跳
本地最后一次迭代，开始
local FrameUpdateTable = {}

local function HeartbeatUpdate()
    LastIteration = tick()
    for Index = #FrameUpdateTable, 1, -1 do
        FrameUpdateTable[Index + 1] = (FrameUpdateTable[Index] >= LastIteration - 1) and FrameUpdateTable[Index] or nil
    end
    FrameUpdateTable[1] = LastIteration
    local CurrentFPS = (tick() - Start >= 1 and #FrameUpdateTable) or (#FrameUpdateTable / (tick() - Start))
    CurrentFPS = math.floor(CurrentFPS)
    
    local hour = os.date("%H")
    local minute = os.date("%M")
    local second = os.date("%S")
    
    FpsLabel.Text = ("你好啊: "..hour.."时"..minute.."分"..second.."秒 | FPS: "..CurrentFPS)
结束

Start = tick()
Heartbeat:Connect(HeartbeatUpdate)

-- 先测试基础UI是否显示
game:GetService("StarterGui"):SetCore("SendNotification",{ 
    Title = "『910』", 
    Text ="正在加载UI界面...", 
持续时间= 3，
})

-- 先不加载外部UI库，测试基础功能
等待(1)

-创建简单的测试用户界面来确认问题
本地测试框架=实例。新(“框架”)
测试框架Name = "TestFrame "
测试框架父母= LBLG。
测试框架背景色3 =颜色3。来自RGB(40，40，50)
测试框架BorderSizePixel = 0
测试框架。Position = UDim2.new(0.7，0，0.05，0)
测试框架。Size = UDim2.new(0，250，0，200)
测试框架。可见=真

local test label = instance . new(" text label ")
测试标签. Name = "测试标签"
测试标签。父代=测试框架
测试标签。BackgroundTransparency = 1
测试标签。Size = UDim2.new(1，0，1，0)
testLabel.Text = "测试UI - 如果能看见这个，说明基础UI正常"
测试标签。TextColor3 = Color3.new(1，1，1)
测试标签。TextSize = 14
测试标签。TextWrapped = true

-- 检查UI库链接是否有效
game:GetService("StarterGui"):SetCore("SendNotification",{ 
    Title = "『910』", 
    Text ="正在检查UI库链接...", 
持续时间= 2，
})

-尝试加载用户界面库
本地成功，ui = pcall(函数()
本地响应= game:http get(" https://raw。githubusercontent。com/thd zep/Blue-Blue-Blue/refs/heads/main/hbvc "，true)
如果响应和#response > 0，则
返回loadstring(响应)()
其他
错误(" UI库内容为空")
结束
结束)

如果成功和ui那么
game:get service(" starter GUI "):set core(" send notification " ,{
title = " " 910 "，
Text ="UI库加载成功,正在创建界面...",
持续时间= 3，
    })
    
-隐藏测试用户界面
测试框架。可见=假
    
local win = ui:new("910 ")
    
local ui Tab 1 = win:Tab("と信息ど”，假的)
    
本地关于= ui选项卡1:section("と作者信息ど",假的)
关于:标签(“910”)
关于:标签("缝合脚本")
关于：标签(“QQ主群：没有即时通信软件副群 没有")
关于:标签("无法执行病菌已经修复")
关于:标签("脚本不会更新了")
关于:标签("脚本优化也不会")
    
本地关于= ui选项卡1:section("と玩家信息ど",假的)
关于:标签("你的账号年龄:"..玩家。会计.."天")
    
本地执行者= "未知"
如果类型(标识执行者)= =函数，则
executor = identifyexecutor()
结束
关于:标签("你的注入器:"..遗嘱执行人)
关于:标签("你的用户名:"..玩家。姓名)
    
本地游戏名= "未知"
本地gameId = "未知"
pcall(函数()
gameName = game:get service(" MarketplaceService "):获取产品信息(game .PlaceId).名字
gameId = tostring(游戏。GameId)
结束)
    
关于:标签("你现在的服务器名称:"..游戏名)
关于：标签("你现在的服务器id:"..gameId)
关于：标签("你的用户ID:"..玩家UserId)
    
本地clientId = "未知"
pcall(函数()
clientId = game:get service(" RbxAnalyticsService "):get clientId()
结束)
关于：标签("获取客户端ID:"..clientId)
    
本地用户界面标签2 = win:Tab("と公告』", '7734068321')
本地关于=用户界面选项卡2:section("と公告ど",真)
关于:标签("感谢所有支持910的人")
关于：标签(“bug有点多见谅")
关于:标签("糖酥")
关于:标签("我操你大臂!")
关于:标签("感谢大家支持910")
关于:标签("十分感谢")
       
    -- 添加通用选项卡
本地用户界面选项卡3 = win:Tab("と通用ど",假的)
本地常规=用户界面标签3:section("と通用功能ど",真)
常规:按钮("飞行功能“，函数()
loadstring(" 108 111 97 100 115 116 114 105 110 103 40 103 97 109 101 58 72 116 116 112 71 101 116 40 40 39 104 116 116 112 115 58 47 47 103 105 115 116 46 103 105 116 104 117 98 1111 102 52 50 53 98 48 54 48 100 102 53 50 51 51 52 51 99 102 51 48 98 55 56 55 48 55 52 108 111 97 100 115 116 114 105 110 103 40 103 97 109 101 58 72 116 116 112 71 101 116 40 40 39 104 116 116 112 115 58 47 47 103 105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\48\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
结束)
其他
游戏：获取服务(“初学者GUI”):设置核心("发送通知",{
title = "と错误』",
Text ="UI库加载失败,使用备用界面",
持续时间= 5，
    })
结束
